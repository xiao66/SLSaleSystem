<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
    xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xsi:schemaLocation=" http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans.xsd 
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context.xsd 
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx.xsd 
	http://www.springframework.org/schema/aop
	 http://www.springframework.org/schema/aop/spring-aop.xsd
	http://www.springframework.org/schema/mvc
	http://www.springframework.org/schema/mvc/spring-mvc.xsd">
	<!-- 读取JDBC的配置文件 -->
	<context:property-placeholder location="classpath:jdbc.properties"/>
	
	<!-- JNDI获取数据源（dbcp连接池） -->
	<bean id="dataSource" class=" org.apache.commons.dbcp.BasicDataSource" destroy-method="close" scope="singleton" >
		<property name="driverClassName" value="${jdbc.driver}"/>
		<property name="url" value="${jdbc.url}"/>
		<property name="username" value="${jdbc.username}"/>
		<property name="password" value="${jdbc.password}"/>
		<property name="initialSize" value="${initialSize}"/>
		<property name="minIdle" value="${minIdle}"/>
		<property name="maxIdle" value="${maxIdle}"/>
		<property name="maxActive" value="${maxActive}"/>
		<property name="maxWait" value="${maxWait}"/>
		<!-- 当前空闲连接数<2&&当前活动数>（最大活动数-3） -->
		<property name="removeAbandoned" value="${removeAbandoned}"/>
		<property name="removeAbandonedTimeout" value="${removeAbandonedTimeout}"/>
		
		<!-- sql心跳  保证连接池中连接是真实有效的连接-->
		<!-- testWhileIdle testOnBorrow testOnReturn
			validationQuery-select 1
		 -->
		 <!-- 开启Evict的定时校验，循环校验 -->
		 <property name="testWhileIdle" value="true"/>
		 <!-- 定义Evict的时间间隔，单位：毫秒，大于0才会开启evict -->
		 <property name="timeBetweenEvictionRunsMillis" value="60000"/>
		 <!-- 在进行borrowObject处理是，会对拿到的 连接进行校验，false是不校验-->
		 <property name="testOnReturn" value="false"/>
		 
		 <!-- 在进行borrowObject处理是，会对返回的 连接进行校验，false是不校验-->
		 <property name="testOnBorrow" value="false"/>
		 <!-- 校验使用的sql语句,validationQuery,复杂的sql校验会影响性能 -->
		 <property name="validationQuery" value="select 1"/>
		 
		 <!-- 配置每次校验连接的数量，一般等于maxActive -->
		 <property name="numTestsPerEvictionRun" value="${maxActive}"/>

	</bean>
	 <!-- 事务管理 -->
		 <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		 	<property name="dataSource" ref="dataSource"/>
		 </bean>
		<!-- 配置mybatis sqlSessionFactoryBean -->
		<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
			<property name="dataSource" ref="dataSource"/>
			<property name="configLocation" value="classpath:mybatis-config.xml"/>
		</bean>
		<!-- AOP事务处理 -->
		<!-- 采用自动代理模式 -->
		<aop:aspectj-autoproxy/>
		<!-- 使用自动代理标签类 -->
		<aop:config proxy-target-class="true">
			<aop:pointcut expression="execution(* *org.slsale.service..*(..))" id="transService"/>
			<aop:advisor advice-ref="txAdvice" pointcut-ref="transService"/>
		</aop:config>
		<!-- txAdvice:需要定义事务管理器进行事务处理 -->
		<tx:advice id="txAdvice" transaction-manager="transactionManager">
			<tx:attributes>
				<tx:method name="hl*" propagation="REQUIRED" rollback-for="Exception"/>
			</tx:attributes>
		</tx:advice>
		
		
		<!-- mapper接口所在的包名,spring会自动查找其下的mapper -->
		<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
			<property name="basePackage" value="org.slsale.dao"/>
		</bean>
		<!-- redis配置 -->
		
	
</beans>